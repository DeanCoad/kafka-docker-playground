version: '3.5'
services:
    ldap:
        image: osixia/openldap:1.3.0
        hostname: ldap
        container_name: ldap
        environment:
            LDAP_ORGANISATION: "Confluent"
            LDAP_DOMAIN: "confluent.io"
        ports:
            - "389:389"
            - "636:636"
        volumes:
            - ../../environment/ldap_authorizer_sasl_scram/ldap/custom:/container/service/slapd/assets/config/bootstrap/ldif/custom
        command: "--copy-service"

    phpldapadmin-service:
        image: osixia/phpldapadmin:0.7.2
        container_name: ldapadmin-service
        environment:
          - PHPLDAPADMIN_LDAP_HOSTS=ldap
        ports:
          - "6444:443"
        depends_on:
          - ldap

    zookeeper:
        volumes:
        - ../../environment/ldap_authorizer_sasl_scram/zookeeper/zookeeper.sasl.jaas.config:/etc/kafka/zookeeper_server_jaas.conf
        environment:
            KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/zookeeper_server_jaas.conf
                -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
                -Dzookeeper.allowSaslFailedClients=false
                -Dzookeeper.requireClientAuthScheme=sasl

    broker:
        volumes:
          - ../../environment/ldap_authorizer_sasl_scram/kafka/users:/service/kafka/users
          - ../../environment/ldap_authorizer_sasl_scram/kafka/kafka.jaas.conf:/etc/kafka/kafka_server_jaas.conf
        environment:
            KAFKA_LISTENERS: SASL_PLAINTEXT://:9092
            KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://broker:9092

            KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: SCRAM-SHA-256
            KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT

            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: SCRAM-SHA-256
            CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            CONFLUENT_METRICS_ENABLE: 'true'

            # Configure authorizer
            KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.ldap.authorizer.LdapAuthorizer
            #KAFKA_ZOOKEEPER_SET_ACL: "true"
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
            # Set Kafka broker user as super user (alternatively, set ACLs before starting brokers)
            KAFKA_SUPER_USERS: User:broker;User:schemaregistry;User:controlcenter
            KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

            # LDAP provider URL
            KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389/DC=CONFLUENT,DC=IO
            # Refresh interval for LDAP cache. If set to zero, persistent search is used.
            # Reduced this value from the default 60000ms (60sec) to 10sec to detect
            # faster the updates done in the LDAP database
            KAFKA_LDAP_REFRESH_INTERVAL_MS: 10000
            # Security authentication protocol for LDAP context
            KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: SIMPLE
            KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
            KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
            # Remember that LDAP works in a context. The search base is ou=groups,dc=confluent,dc=io
            # But since my URL is ldap://ldap:389/DC=CONFLUENT,DC=IO, we are already working in the dc=confluent,dc=io context
            KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups

            # Object class for groups
            KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
            KAFKA_LDAP_GROUP_SEARCH_SCOPE: 2
            # Name of the attribute from which group name used in ACLs is obtained
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
            # Regex pattern to obtain group name used in ACLs from the attribute
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE_PATTERN:
            # Name of the attribute from which group members (user principals) are obtained
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
            # Regex pattern to obtain user principal from group member attribute
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io

    connect:
        environment:
            # Configure the Connect workers to use SASL/SCRAM-SHA-256.
            CONNECT_SASL_MECHANISM: SCRAM-SHA-256
            CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
            # Confluent Monitoring Interceptors for Control Center Streams Monitoring
            # producer
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: SCRAM-SHA-256
            # consumer
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: SCRAM-SHA-256
            # JAAS
            CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            # producer
            CONNECT_PRODUCER_SASL_MECHANISM: SCRAM-SHA-256
            CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            # consumer
            CONNECT_CONSUMER_SASL_MECHANISM: SCRAM-SHA-256
            CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"

    schema-registry:
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
            SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: SCRAM-SHA-256
            SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"

    control-center:
        environment:
            CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=\"broker\" \
                password=\"broker\";"
            CONTROL_CENTER_STREAMS_SASL_MECHANISM: SCRAM-SHA-256
