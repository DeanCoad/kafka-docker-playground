version: '3.5'
services:
    ldap:
        image: osixia/openldap:1.3.0
        hostname: ldap
        container_name: ldap
        environment:
            LDAP_ORGANISATION: "Confluent"
            LDAP_DOMAIN: "confluent.io"
        ports:
            - "389:389"
            - "636:636"
        volumes:
            - ../../environment/ldap_authorizer_sasl_plain/ldap/custom:/container/service/slapd/assets/config/bootstrap/ldif/custom
        command: "--copy-service"

    phpldapadmin-service:
        image: osixia/phpldapadmin:0.7.2
        container_name: ldapadmin-service
        environment:
          - PHPLDAPADMIN_LDAP_HOSTS=ldap
        ports:
          - "6444:443"
        depends_on:
          - ldap

    zookeeper:
        image: confluentinc/cp-zookeeper:5.3.2
        hostname: zookeeper
        container_name: zookeeper
        # Required to wait for the keytab to get generated
        restart: on-failure
        volumes:
        - ../../environment/ldap_authorizer_sasl_plain/zookeeper/zookeeper.sasl.jaas.config:/etc/kafka/zookeeper_server_jaas.conf
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_MAX_CLIENT_CNXNS: 0
            KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/zookeeper_server_jaas.conf
                -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
                -Dzookeeper.allowSaslFailedClients=false
                -Dzookeeper.requireClientAuthScheme=sasl

    broker:
        image: confluentinc/cp-server:5.3.2
        hostname: broker
        container_name: broker
        depends_on:
          - zookeeper
          - ldap
        volumes:
          - ../../environment/ldap_authorizer_sasl_plain/kafka/users:/service/kafka/users
          - ../../environment/ldap_authorizer_sasl_plain/kafka/kafka.jaas.conf:/etc/kafka/kafka_server_jaas.conf
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENERS: SASL_PLAINTEXT://:9092
            KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://broker:9092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
            KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
            # Confluent Metrics Reporter for Control Center Cluster Monitoring
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092

            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
            CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"client\" \
                password=\"client-secret\";"
            CONFLUENT_METRICS_ENABLE: 'true'
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT

            # Configure authorizer
            KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.ldap.authorizer.LdapAuthorizer
            KAFKA_ZOOKEEPER_SET_ACL: "true"
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
            # Set Kafka broker user as super user (alternatively, set ACLs before starting brokers)
            KAFKA_SUPER_USERS: User:broker;User:client;User:controlcenter;User:connect;User:schemaregistry
            KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

            # LDAP provider URL
            KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://ldap:389/DC=CONFLUENT,DC=IO
            # Refresh interval for LDAP cache. If set to zero, persistent search is used.
            # Reduced this value from the default 60000ms (60sec) to 10sec to detect
            # faster the updates done in the LDAP database
            KAFKA_LDAP_REFRESH_INTERVAL_MS: 10000
            # Security authentication protocol for LDAP context
            KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: SIMPLE
            KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluent,dc=io
            KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
            # Remember that LDAP works in a context. The search base is ou=groups,dc=confluent,dc=io
            # But since my URL is ldap://ldap:389/DC=CONFLUENT,DC=IO, we are already working in the dc=confluent,dc=io context
            KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups

            # Object class for groups
            KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
            KAFKA_LDAP_GROUP_SEARCH_SCOPE: 2
            # Name of the attribute from which group name used in ACLs is obtained
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
            # Regex pattern to obtain group name used in ACLs from the attribute
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE_PATTERN:
            # Name of the attribute from which group members (user principals) are obtained
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
            # Regex pattern to obtain user principal from group member attribute
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluent,dc=io

    connect:
        image: vdesabou/kafka-docker-playground-connect:5.3.2
        hostname: connect
        container_name: connect
        depends_on:
            - zookeeper
            - broker
            - schema-registry
        # Required to wait for the keytab to get generated
        restart: on-failure
        # volumes are overwritten
        ports:
            - "8083:8083"
        environment:
            CONNECT_BOOTSTRAP_SERVERS: broker:9092
            CONNECT_REST_ADVERTISED_HOST_NAME: connect
            CONNECT_GROUP_ID: "connect"
            CONNECT_PRODUCER_CLIENT_ID: "connect-worker-producer"
            CONNECT_CONFIG_STORAGE_TOPIC: connect.config
            CONNECT_OFFSET_STORAGE_TOPIC: connect.offsets
            CONNECT_STATUS_STORAGE_TOPIC: connect.status
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
            CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
            CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
            CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components
            CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
            # Confluent Monitoring Interceptors for Control Center Streams Monitoring
            # producer
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"connect\" \
                password=\"connect-secret\";"
            CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            # consumer
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"connect\" \
                password=\"connect-secret\";"
            CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN
            # Configure the Connect workers to use SASL/PLAIN.
            CONNECT_SASL_MECHANISM: PLAIN
            CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
            # JAAS
            CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"connect\" \
                password=\"connect-secret\";"
            # producer
            CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
            CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"connect\" \
                password=\"connect-secret\";"
            # consumer
            CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
            CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONNECT_CONSUMER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"connect\" \
                password=\"connect-secret\";"

    schema-registry:
        image: confluentinc/cp-schema-registry:5.3.2
        hostname: schema-registry
        container_name: schema-registry
        # Required to wait for the keytab to get generated
        restart: on-failure
        depends_on:
            - zookeeper
            - broker
        ports:
            - '8081:8081'
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:9092
            SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
            SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
            SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"schemaregistry\" \
                password=\"schemaregistry-secret\";"

    control-center:
        image: confluentinc/cp-enterprise-control-center:5.3.2
        container_name: control-center
        # Required to wait for the keytab to get generated
        restart: on-failure
        depends_on:
            - zookeeper
            - broker
            - connect
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:9092"
            CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
            CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
            CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
            CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1
            CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
            # Amount of heap to use for internal caches. Increase for better thoughput
            CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 100000000
            CONTROL_CENTER_CONNECT_CLUSTER: "http://connect:8083"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
            CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"client\" \
                password=\"client-secret\";"
            CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN
